// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "04/15/2018 13:54:23"

// 
// Device: Altera EP2C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Problem1 (
	x1,
	x2,
	x3,
	x4,
	x5,
	f,
	g);
input 	x1;
input 	x2;
input 	x3;
input 	x4;
input 	x5;
output 	f;
output 	g;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \x2~combout ;
wire \x4~combout ;
wire \x3~combout ;
wire \I14|out1~0_combout ;
wire \x1~combout ;
wire \I14|out1~1_combout ;
wire \x5~combout ;
wire \I15|out1~0_combout ;
wire \I15|out1~1_combout ;


cycloneii_io \x2~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\x2~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(x2));
// synopsys translate_off
defparam \x2~I .input_async_reset = "none";
defparam \x2~I .input_power_up = "low";
defparam \x2~I .input_register_mode = "none";
defparam \x2~I .input_sync_reset = "none";
defparam \x2~I .oe_async_reset = "none";
defparam \x2~I .oe_power_up = "low";
defparam \x2~I .oe_register_mode = "none";
defparam \x2~I .oe_sync_reset = "none";
defparam \x2~I .operation_mode = "input";
defparam \x2~I .output_async_reset = "none";
defparam \x2~I .output_power_up = "low";
defparam \x2~I .output_register_mode = "none";
defparam \x2~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \x4~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\x4~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(x4));
// synopsys translate_off
defparam \x4~I .input_async_reset = "none";
defparam \x4~I .input_power_up = "low";
defparam \x4~I .input_register_mode = "none";
defparam \x4~I .input_sync_reset = "none";
defparam \x4~I .oe_async_reset = "none";
defparam \x4~I .oe_power_up = "low";
defparam \x4~I .oe_register_mode = "none";
defparam \x4~I .oe_sync_reset = "none";
defparam \x4~I .operation_mode = "input";
defparam \x4~I .output_async_reset = "none";
defparam \x4~I .output_power_up = "low";
defparam \x4~I .output_register_mode = "none";
defparam \x4~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \x3~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\x3~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(x3));
// synopsys translate_off
defparam \x3~I .input_async_reset = "none";
defparam \x3~I .input_power_up = "low";
defparam \x3~I .input_register_mode = "none";
defparam \x3~I .input_sync_reset = "none";
defparam \x3~I .oe_async_reset = "none";
defparam \x3~I .oe_power_up = "low";
defparam \x3~I .oe_register_mode = "none";
defparam \x3~I .oe_sync_reset = "none";
defparam \x3~I .operation_mode = "input";
defparam \x3~I .output_async_reset = "none";
defparam \x3~I .output_power_up = "low";
defparam \x3~I .output_register_mode = "none";
defparam \x3~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \I14|out1~0 (
// Equation(s):
// \I14|out1~0_combout  = (\x5~combout  & (\x2~combout  $ ((!\x4~combout )))) # (!\x5~combout  & (((!\x4~combout  & \x3~combout ))))

	.dataa(\x5~combout ),
	.datab(\x2~combout ),
	.datac(\x4~combout ),
	.datad(\x3~combout ),
	.cin(gnd),
	.combout(\I14|out1~0_combout ),
	.cout());
// synopsys translate_off
defparam \I14|out1~0 .lut_mask = 16'h8782;
defparam \I14|out1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \x1~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\x1~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(x1));
// synopsys translate_off
defparam \x1~I .input_async_reset = "none";
defparam \x1~I .input_power_up = "low";
defparam \x1~I .input_register_mode = "none";
defparam \x1~I .input_sync_reset = "none";
defparam \x1~I .oe_async_reset = "none";
defparam \x1~I .oe_power_up = "low";
defparam \x1~I .oe_register_mode = "none";
defparam \x1~I .oe_sync_reset = "none";
defparam \x1~I .operation_mode = "input";
defparam \x1~I .output_async_reset = "none";
defparam \x1~I .output_power_up = "low";
defparam \x1~I .output_register_mode = "none";
defparam \x1~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \I14|out1~1 (
// Equation(s):
// \I14|out1~1_combout  = (\I14|out1~0_combout  & ((\x2~combout ) # (!\x1~combout )))

	.dataa(\I14|out1~0_combout ),
	.datab(\x2~combout ),
	.datac(vcc),
	.datad(\x1~combout ),
	.cin(gnd),
	.combout(\I14|out1~1_combout ),
	.cout());
// synopsys translate_off
defparam \I14|out1~1 .lut_mask = 16'h88AA;
defparam \I14|out1~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \x5~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\x5~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(x5));
// synopsys translate_off
defparam \x5~I .input_async_reset = "none";
defparam \x5~I .input_power_up = "low";
defparam \x5~I .input_register_mode = "none";
defparam \x5~I .input_sync_reset = "none";
defparam \x5~I .oe_async_reset = "none";
defparam \x5~I .oe_power_up = "low";
defparam \x5~I .oe_register_mode = "none";
defparam \x5~I .oe_sync_reset = "none";
defparam \x5~I .operation_mode = "input";
defparam \x5~I .output_async_reset = "none";
defparam \x5~I .output_power_up = "low";
defparam \x5~I .output_register_mode = "none";
defparam \x5~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \I15|out1~0 (
// Equation(s):
// \I15|out1~0_combout  = (\x5~combout  & (((\x4~combout )))) # (!\x5~combout  & ((\x2~combout  & ((!\x4~combout ) # (!\x1~combout ))) # (!\x2~combout  & (!\x1~combout  & !\x4~combout ))))

	.dataa(\x2~combout ),
	.datab(\x5~combout ),
	.datac(\x1~combout ),
	.datad(\x4~combout ),
	.cin(gnd),
	.combout(\I15|out1~0_combout ),
	.cout());
// synopsys translate_off
defparam \I15|out1~0 .lut_mask = 16'hCE23;
defparam \I15|out1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \I15|out1~1 (
// Equation(s):
// \I15|out1~1_combout  = (\I15|out1~0_combout  & ((\x2~combout ) # ((!\x3~combout ) # (!\x5~combout )))) # (!\I15|out1~0_combout  & (((!\x5~combout  & !\x3~combout ))))

	.dataa(\x2~combout ),
	.datab(\I15|out1~0_combout ),
	.datac(\x5~combout ),
	.datad(\x3~combout ),
	.cin(gnd),
	.combout(\I15|out1~1_combout ),
	.cout());
// synopsys translate_off
defparam \I15|out1~1 .lut_mask = 16'h8CCF;
defparam \I15|out1~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \f~I (
	.datain(\I14|out1~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(f));
// synopsys translate_off
defparam \f~I .input_async_reset = "none";
defparam \f~I .input_power_up = "low";
defparam \f~I .input_register_mode = "none";
defparam \f~I .input_sync_reset = "none";
defparam \f~I .oe_async_reset = "none";
defparam \f~I .oe_power_up = "low";
defparam \f~I .oe_register_mode = "none";
defparam \f~I .oe_sync_reset = "none";
defparam \f~I .operation_mode = "output";
defparam \f~I .output_async_reset = "none";
defparam \f~I .output_power_up = "low";
defparam \f~I .output_register_mode = "none";
defparam \f~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \g~I (
	.datain(\I15|out1~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(g));
// synopsys translate_off
defparam \g~I .input_async_reset = "none";
defparam \g~I .input_power_up = "low";
defparam \g~I .input_register_mode = "none";
defparam \g~I .input_sync_reset = "none";
defparam \g~I .oe_async_reset = "none";
defparam \g~I .oe_power_up = "low";
defparam \g~I .oe_register_mode = "none";
defparam \g~I .oe_sync_reset = "none";
defparam \g~I .operation_mode = "output";
defparam \g~I .output_async_reset = "none";
defparam \g~I .output_power_up = "low";
defparam \g~I .output_register_mode = "none";
defparam \g~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
